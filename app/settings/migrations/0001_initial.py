# Generated by Django 4.2.4 on 2023-09-05 07:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import home.util.rand


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SiteSettings",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "site_url",
                    models.URLField(
                        blank=True, max_length=128, null=True, verbose_name="Site URL"
                    ),
                ),
                (
                    "site_title",
                    models.CharField(
                        default="Django Files", max_length=64, verbose_name="Site Title"
                    ),
                ),
                (
                    "site_description",
                    models.TextField(
                        default="A Feature Packed Self-Hosted Django/Docker File Manager for Sharing Files with ShareX, Flameshot and Much more...",
                        max_length=155,
                        verbose_name="Site Description",
                    ),
                ),
                (
                    "site_color",
                    models.CharField(
                        default=home.util.rand.rand_color_hex,
                        help_text="Site Theme Color for Site Embeds",
                        max_length=7,
                        verbose_name="Site Color",
                    ),
                ),
                (
                    "pub_load",
                    models.BooleanField(
                        default=False,
                        help_text="Allow Public Uploads",
                        verbose_name="Public Upload",
                    ),
                ),
                (
                    "oauth_reg",
                    models.BooleanField(
                        default=False,
                        help_text="Allow Oauth Auto Registration",
                        verbose_name="Oauth Reg",
                    ),
                ),
                (
                    "two_factor",
                    models.BooleanField(
                        default=False,
                        help_text="Require Two-Factor Authentication",
                        verbose_name="Two-Factor",
                    ),
                ),
                (
                    "duo_auth",
                    models.BooleanField(
                        default=False,
                        help_text="Require Duo Authentication",
                        verbose_name="Duo AUth",
                    ),
                ),
                (
                    "oauth_redirect_url",
                    models.URLField(blank=True, max_length=128, null=True),
                ),
                (
                    "discord_client_id",
                    models.CharField(blank=True, max_length=32, null=True),
                ),
                (
                    "discord_client_secret",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "github_client_id",
                    models.CharField(blank=True, max_length=32, null=True),
                ),
                (
                    "github_client_secret",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                ("s3_region", models.CharField(blank=True, max_length=16, null=True)),
                (
                    "s3_secret_key",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "s3_secret_key_id",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "s3_bucket_name",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "s3_cdn",
                    models.CharField(
                        blank=True,
                        help_text="Replaces s3 hostname on urls to allow cdn use in front of s3 bucket.",
                        max_length=128,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Setting",
                "verbose_name_plural": "Settings",
            },
        ),
        migrations.CreateModel(
            name="Webhooks",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("url", models.URLField(unique=True, verbose_name="Webhook URL")),
                ("hook_id", models.CharField(blank=True, max_length=32, null=True)),
                ("guild_id", models.CharField(blank=True, max_length=32, null=True)),
                ("channel_id", models.CharField(blank=True, max_length=32, null=True)),
                ("active", models.BooleanField(default=True)),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Hook Created Date.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Hook Updated Date.",
                        verbose_name="Updated",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Webhook",
                "verbose_name_plural": "Webhooks",
                "ordering": ["-created_at"],
            },
        ),
    ]
