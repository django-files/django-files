name: "Test"

on:
  workflow_dispatch:
  push:
  #  branches: ["master"]
  #pull_request:
  #  branches: ["master", "*.*.*"]

jobs:
  test:
    name: "Test"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ !contains(github.event.head_commit.message, '#notest') }}
    env:
      TEST: "True"

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Python 3.13"
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: "Python Install"
        working-directory: app
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev.txt
          playwright install chromium

      - name: "Setup Node 20"
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: "Node Install"
        run: npm install

      - name: "Test Migrations"
        working-directory: app
        env:
          DATABASE_LOCATION: /tmp/migration-test-db
          SECRET_KEY: alsdfjalksdjfllkjdfkerioqweroiu
        run: |
          python manage.py migrate
          python manage.py makemigrations --dry-run --check --noinput

      - name: "Test App"
        working-directory: app
        run: |
          coverage run manage.py test --verbosity 2 --keepdb
          coverage xml
          coverage report

      - name: "Codacy Coverage"
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: app/coverage.xml

      #- name: "Upload Artifact"
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: screenshots
      #    path: app/screenshots/

      - name: "Push Artifacts"
        uses: cssnr/push-artifacts-action@master
        with:
          source: "app/screenshots/"
          dest: "/static"
          host: ${{ secrets.ARTIFACTS_HOST }}
          user: ${{ secrets.RSYNC_USER }}
          pass: ${{ secrets.RSYNC_PASS }}
          port: ${{ secrets.RSYNC_PORT }}
          webhost: "https://artifacts.hosted-domains.com"
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}
