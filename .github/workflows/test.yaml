name: Test

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master", "*.*.*"]
  workflow_dispatch:

jobs:
  test:
    name: "Test"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ !contains(github.event.head_commit.message, '#notest') }}

    services:
      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Setup Python"
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: "Requirements ${{ matrix.version }}"
        working-directory: app
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev.txt
          playwright install chromium

      - name: "Flake8"
        working-directory: app
        run: |
          flake8

      - name: "Setup Node 18"
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: "Node Install"
        run: npm install

      - name: "Test Migrations"
        working-directory: app
        env:
          DATABSE_LOCATION: /tmp/migration-test-db
        run: |
          mkdir -p /data/media/db
          echo "thisisverysecure" > /data/media/db/secret.key
          python manage.py migrate
          python manage.py makemigrations --dry-run --check --noinput

      - name: "Test"
        working-directory: app
        run: |
          coverage run manage.py test --verbosity 2 --keepdb
          coverage xml
          coverage report

      - name: "Codacy Coverage"
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: app/coverage.xml

#      - name: "Upload Artifact"
#        uses: actions/upload-artifact@v3
#        with:
#          name: screenshots
#          path: app/screenshots/

      - name: "Push Artifacts"
        uses: cssnr/push-artifacts-action@master
        with:
          path: "app/screenshots/"
          host: ${{ secrets.ARTIFACTS_HOST }}
          user: ${{ secrets.RSYNC_USER }}
          pass: ${{ secrets.RSYNC_PASS }}
          port: ${{ secrets.RSYNC_PORT }}
          base: "/static"
          webhost: "https://artifacts.hosted-domains.com"
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
