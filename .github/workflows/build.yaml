name: Build

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tags:
        description: "Override Tags: comma,separated"
        required: false

env:
  REGISTRY: "ghcr.io"
  USER: "django-files"
  REPO: "django-files"

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Tags"
        id: tags
        run: |
          echo "Input Tags: ${{ inputs.tags }}"
          echo "GITHUB_REF_NAME: ${GITHUB_REF_NAME}"
          echo "github.event_name: ${{ github.event_name }}"
          if [ "${{ github.event_name }}" = "workflow_dispatch" ];then
            if [ -n "${{ inputs.tags }}" ];then
              echo "Parsing Input Tags..."
              TAGS=""
              IFS=',' read -ra INPUT <<< "${{ inputs.tags }}"
              for tag in "${INPUT[@]}";do
                echo "${REGISTRY}/${USER}/${REPO}:${tag}"
                TAGS+="${REGISTRY}/${USER}/${REPO}:${tag},"
              done
              TAGS="$(echo ${TAGS} | sed 's/,*$//g')"
            else
              echo "Using Default Tags..."
              TAGS="${REGISTRY}/${USER}/${REPO}:${GITHUB_REF_NAME}"
              TAGS+=",${REGISTRY}/${USER}/${REPO}:latest"
            fi
            echo "tags=${TAGS}" >> $GITHUB_OUTPUT
            echo "Parsed Tags: ${TAGS}"
          else
            TAGS="${REGISTRY}/${USER}/${REPO}:${GITHUB_REF_NAME}"
            if [ "${{ github.event.release.prerelease }}" != "true" ];then
              TAGS+=",${REGISTRY}/${USER}/${REPO}:latest"
            fi
            echo "tags=${TAGS}" >> $GITHUB_OUTPUT
            echo "Parsed Tags: ${TAGS}"
          fi
          echo "APP_VERSION=${GITHUB_REF_NAME}" >> app/.env
          echo "APP_VERSION: ${GITHUB_REF_NAME}"

      - name: "Setup Buildx"
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: "Docker Login"
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_PASS }}

      - name: "Build and Push"
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.tags.outputs.tags }}
