name: "Lint"

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [master]
    paths-ignore:
      - ".assets/**"
      - ".github/disabled/**"
      - "app/requirements*"
      - "nginx/**"
      - ".dockerignore"
      - ".gitignore"
      - ".prettierignore"
      - "Makefile"
      - "pyproject.toml"
      - "requirements.txt"
      - "settings.env.example"
      - "test.env"

jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ !contains(github.event.head_commit.message, '#nolint') }}
    permissions:
      contents: read

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      #- name: "Debug event.json"
      #  if: ${{ always() }}
      #  run: |
      #    cat "${GITHUB_EVENT_PATH}"

      - name: "Setup Python 3.13"
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      - name: "Install"
        id: install
        run: |
          python -m pip install -U pip
          python -m pip install -Ur app/requirements-dev.txt

      - name: "Flake8"
        if: ${{ always() }}
        run: |
          flake8 --max-line-length 119 --extend-exclude "venv,node_modules,migrations" .

      - name: "Ruff"
        if: ${{ always() }}
        uses: astral-sh/ruff-action@v3

      - name: "Black"
        if: ${{ always() }}
        uses: psf/black@stable

      - name: "Isort"
        if: ${{ always() }}
        uses: isort/isort-action@v1

      #- name: "Mypy"
      #  if: ${{ always() }}
      #  run: |
      #    mypy src

      - name: "Prettier"
        if: ${{ always() }}
        run: |
          npm install prettier
          npx prettier --check .

      #- name: "SonarQube"
      #  uses: SonarSource/sonarqube-scan-action@v4
      #  env:
      #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
