version: '3.7'

services:
  nginx:
    build: ./nginx
    image: djangofiles-nginx:${VERSION:-latest}
    env_file: settings.env
    deploy:
      mode: global
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.constraint-label=traefik-public"
        - "traefik.http.routers.STACK_NAME-http.rule=Host(`${TRAEFIK_HOST:-}`)"
        - "traefik.http.routers.STACK_NAME-http.entrypoints=http"
        - "traefik.http.routers.STACK_NAME-http.middlewares=https-redirect"
        - "traefik.http.routers.STACK_NAME-https.rule=Host(`${TRAEFIK_HOST:-}`)"
        - "traefik.http.routers.STACK_NAME-https.entrypoints=https"
        - "traefik.http.routers.STACK_NAME-https.tls=true"
        - "traefik.http.services.STACK_NAME.loadbalancer.server.port=80"
        - "traefik.http.services.STACK_NAME.loadbalancer.server.scheme=http"
    volumes:
      - ${APP_FILES_STATIC:-./app/static}:/data/static
      - logs_dir:/logs
      - media_dir:/data/media
      - ${APP_FILES:-./app}:/app
    depends_on:
      - app
    ports:
      - "80:80"

  app:
    build: ./app
    image: djangofiles-app:${VERSION:-latest}
    env_file: settings.env
    command: "watchmedo auto-restart -d /app -p '*.py' -R -- gunicorn djangofiles.asgi:application -b 0.0.0.0:9000 -w 2 -k uvicorn.workers.UvicornWorker"
    deploy:
      mode: global
    volumes:
      - ${APP_FILES_STATIC:-./app/static}:/data/static
      - media_dir:/data/media
      - ${APP_FILES:-./app}:/app
    depends_on:
      - redis

  worker:
    image: djangofiles-app:${VERSION:-latest}
    env_file: settings.env
    command: "watchmedo auto-restart -d /app -p '*.py' -R -- celery -A djangofiles worker -l INFO -c 4"
    deploy:
      replicas: 1
    volumes:
      - media_dir:/data/media
      - logs_dir:/logs
      - ${APP_FILES:-./app}:/app
    depends_on:
      - app
      - redis

  beat:
    image: djangofiles-app:${VERSION:-latest}
    env_file: settings.env
    command: "celery -A djangofiles beat -l INFO -S django"
    deploy:
      replicas: 1
    volumes:
      - media_dir:/data/media
    depends_on:
      - app
      - redis

  redis:
    image: redis:6-alpine
    command: "redis-server --appendonly yes"
    deploy:
      replicas: 1
    volumes:
      - redis_data:/data

  vector:
    build: ./vector
    image: djangofiles-vector:${VERSION:-latest}
    environment:
      - X_TEST=true
    deploy:
      replicas: 1
    depends_on:
      - app
      - nginx
      - redis
    volumes:
      - logs_dir:/logs
      - vector_data:/data

volumes:
  static_dir:
  redis_data:
  logs_dir:
  vector_data:
  media_dir:
