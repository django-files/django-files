version: '3.7'

services:
  nginx:
    build:
      context: ./nginx
      network: host
    image: ${REGISTRY_HOST}/${REGISTRY_GROUP}/djangofiles-nginx:${VERSION}
    deploy:
      mode: global
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.constraint-label=traefik-public"
        - "traefik.http.routers.STACK_NAME-http.rule=Host(${TRAEFIK_HOST:-``})"
        - "traefik.http.routers.STACK_NAME-http.entrypoints=http"
        - "traefik.http.routers.STACK_NAME-http.middlewares=https-redirect"
        - "traefik.http.routers.STACK_NAME-https.rule=Host(${TRAEFIK_HOST:-``})"
        - "traefik.http.routers.STACK_NAME-https.entrypoints=https"
        - "traefik.http.routers.STACK_NAME-https.tls=true"
        - "traefik.http.services.STACK_NAME.loadbalancer.server.port=80"
        - "traefik.http.services.STACK_NAME.loadbalancer.server.scheme=http"
    volumes:
      - static_dir:/data/static
      - logs_dir:/logs
      - media_dir:/data/media
#    secrets:
#      - source: cssnr_basic_http_auth
#        target: /etc/nginx/auth.users
    depends_on:
      - app
#      - flower
#      - redis-commander
#      - phpmyadmin
    networks:
      - traefik-public
      - net-internal

  app:
    build:
      context: ./app
      network: host
    image: ${REGISTRY_HOST}/${REGISTRY_GROUP}/djangofiles-app:${VERSION}
    env_file: ${ENV_FILE}
    command: "gunicorn djangofiles.asgi:application -b 0.0.0.0:9000 -w 2 -k uvicorn.workers.UvicornWorker"
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:9000/app-health-check/"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 3s
    deploy:
      mode: global
    volumes:
      - static_dir:/data/static
      - media_dir:/data/media
    depends_on:
      - redis
    networks:
      - net-internal

  worker:
    image: ${REGISTRY_HOST}/${REGISTRY_GROUP}/djangofiles-app:${VERSION}
    env_file: ${ENV_FILE}
    command: "celery -A djangofiles worker -l INFO -c 2"
    deploy:
      replicas: 1
    volumes:
      - media_dir:/data/media
      - logs_dir:/logs
    depends_on:
      - app
      - redis
    networks:
      - net-internal

  beat:
    image: ${REGISTRY_HOST}/${REGISTRY_GROUP}/djangofiles-app:${VERSION}
    env_file: ${ENV_FILE}
    command: "celery -A djangofiles beat -l INFO -S django"
    deploy:
      replicas: 1
    volumes:
      - media_dir:/data/media
    depends_on:
      - app
      - redis
    networks:
      - net-internal

  redis:
    image: redis:6-alpine
    command: "redis-server --appendonly yes"
    deploy:
      replicas: 1
    volumes:
      - redis_data:/data
    networks:
      - net-internal

  vector:
    build:
      context: ./vector
      network: host
    image: ${REGISTRY_HOST}/${REGISTRY_GROUP}/djangofiles-vector:${VERSION:-latest}
    environment:
      - X_TEST=true
    deploy:
      replicas: 1
    depends_on:
      - app
      - nginx
      - redis
    volumes:
      - logs_dir:/logs
      - vector_data:/data
#    ports:
#      - "8686:8686"


#  redis-commander:
#    image: ghcr.io/joeferner/redis-commander:latest
#    environment:
#      - REDIS_HOSTS=local:redis:6379:0,local:redis:6379:1
#      - URL_PREFIX=/redis
#      - TRUST_PROXY=true
#    deploy:
#      replicas: 1
#    depends_on:
#      - redis
#    networks:
#      - net-internal
#
#  flower:
#    image: mher/flower:1.2
#    env_file: ${ENV_FILE}
#    deploy:
#      replicas: 1
#    volumes:
#      - flower_data:/data
#    depends_on:
#      - app
#      - redis
#    networks:
#      - net-internal
#
#  phpmyadmin:
#    image: phpmyadmin:latest
#    env_file: ${ENV_FILE}
#    environment:
#      - APACHE_PORT=8082
#      - PMA_ABSOLUTE_URI=/phpmyadmin/
#      - PMA_HOST=${DATABASE_HOST}
#      - PMA_PORT=${DATABASE_PORT}
#      - PMA_USER=${DATABASE_USER}
#      - PMA_PASSWORD=${DATABASE_PASS}
#    deploy:
#      replicas: 1
#    networks:
#      - net-internal
#
#secrets:
#  cssnr_basic_http_auth:
#    external: true

networks:
  net-internal:
    driver: overlay
  traefik-public:
    external: true

volumes:
  static_dir:
#  flower_data:
  redis_data:
  logs_dir:
  vector_data:
  media_dir:
#    driver_opts:
#      type: none
#      o: bind
#      device: /data/docker/STACK_NAME
